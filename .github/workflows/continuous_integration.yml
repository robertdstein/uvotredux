# This is a basic workflow to help you get started with Actions

name: CI with Docker

on:
  push:
  pull_request:

env:
  HEADASPROMPT: /dev/null # Allows non-interactive use of HEASoft tools
  UVOTREDUX_DATA_DIR: /mydata # Directory for UVOT data

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: robertdstein/heasoft:latest # Replace with your Docker image
      options: --user root

    steps:
      - name: Create data directory
        run: |
          mkdir -p $UVOTREDUX_DATA_DIR

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install -e ".[dev]"

      - name: Run tests
        working-directory: $UVOTREDUX_DATA_DIR
        run: python -m unittest discover $GITHUB_WORKSPACE/tests

      - name: Run tests 2
        working-directory: $UVOTREDUX_DATA_DIR
        run: python -m coverage run -m unittest discover $GITHUB_WORKSPACE/tests
#        run: coverage run -m unittest discover $GITHUB_WORKSPACE/tests

      - name: Run Coveralls
        continue-on-error: true
        if: ${{ success() }}
        run: |
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install pypa/build
        run: python -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') && success() && github.event_name == 'push' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
